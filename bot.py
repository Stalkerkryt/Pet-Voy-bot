import asyncio
import logging
import os
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ .env
load_dotenv()
TOKEN = os.getenv("BOT_TOKEN")

# –°–æ–∑–¥–∞—ë–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=TOKEN)
dp = Dispatcher()

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(Command("start"))
async def start_command(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —É—Ö–æ–¥–∞ –∑–∞ –ø–∏—Ç–æ–º—Ü–∞–º–∏ üê∂üê±. –Ø –ø–æ–º–æ–≥—É –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å –æ –∫–æ—Ä–º–ª–µ–Ω–∏–∏, —Å—Ç—Ä–∏–∂–∫–µ –∏ –≤–∏–∑–∏—Ç–∞—Ö –∫ –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä—É!")

# –ö–æ–º–∞–Ω–¥–∞ /help
@dp.message(Command("help"))
async def help_command(message: types.Message):
    await message.answer("–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
                         "/start - –ù–∞—á–∞—Ç—å\n"
                         "/help - –ü–æ–º–æ—â—å\n"
                         "–°–∫–æ—Ä–æ –¥–æ–±–∞–≤–ª—é –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è!")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    logging.basicConfig(level=logging.INFO)
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
